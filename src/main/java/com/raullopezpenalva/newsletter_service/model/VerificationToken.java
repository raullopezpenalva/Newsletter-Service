package com.raullopezpenalva.newsletter_service.model;

import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.CreationTimestamp;
import io.swagger.v3.oas.annotations.media.Schema;

import java.time.LocalDateTime;
import java.util.UUID;

@Entity
@Table(name = "verification_tokens")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Schema(description = "Entity representing a verification token for subscriber actions.")
public class VerificationToken {

    @Id
    @GeneratedValue
    @Schema(description = "Unique identifier of the verification token.", example = "3fa85f64-5717-4562-b3fc-2c963f66afa6")
    private UUID id;

    @Column(nullable = false, unique = true)
    @Schema(description = "The verification token string.", example = "3fa85f64-5717-4562-b3fc-2c963f66afa6")
    private String token;

    @Column(name = "subscriber_id", nullable = false)
    @Schema(description = "Identifier of the subscriber associated with this token.", example = "3fa85f64-5717-4562-b3fc-2c963f66afa6")
    private UUID subscriberId;

    @Builder.Default
    @Column(nullable = false)
    @Schema(description = "Indicates whether the token has been used.", example = "false")
    private boolean used = false;

    public VerificationToken(boolean used) {
        this.used = used;
    }

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    @Schema(description = "The type of the verification token.", example = "CONFIRMATION")
    private TokenType type;

    @CreationTimestamp
    @Schema(description = "Timestamp when the verification token was created.", example = "2023-01-01T12:00:00Z")
    private LocalDateTime createdAt;

    @Schema(description = "Timestamp when the verification token expires.", example = "2023-01-02T12:00:00Z")
    private LocalDateTime expiresAt;

    // Getters and Setters (can be generated by Lombok)

    public UUID getId() {
        return id;
    }

    public String getToken() {
        return token;
    }

    public UUID getSubscriberId() {
        return subscriberId;
    }

    public TokenType getType() {
        return type;
    }

    public boolean isUsed() {
        return used;
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    public LocalDateTime getExpiresAt() {
        return expiresAt;
    }

    public void setToken(String token) {
        this.token = token;
    }

    public void setSubscriberId(UUID subscriberId) {
        this.subscriberId = subscriberId;
    }

    public void setUsed(boolean used) {
        this.used = used;
    }

    public void setType(TokenType type) {
        this.type = type;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public void setExpiresAt(LocalDateTime expiresAt) {
        this.expiresAt = expiresAt;
    }

}